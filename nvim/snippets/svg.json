{
  "a": {
    "prefix": "a",
    "body": ["<a xlink:href=\"$1\" target=\"$2\">", "\t$3", "</a>"],
    "description": "The SVG Anchor Element (<a>) defines a hyperlink."
  },
  "animate": {
    "prefix": "animate",
    "body": [
      "<animate attributeType=\"XML\"",
      "\tattributeName=\"$1\"",
      "\tfrom=\"$2\" to=\"$3\"",
      "\tdur=\"$4\"",
      "\trepeatCount=\"$5\"/>$6"
    ],
    "description": "The animate element is put inside a shape element and defines how an attribute of an element changes over the animation."
  },
  "animateMotion": {
    "prefix": "animateMotion",
    "body": [
      "<animateMotion path=\"$1\"",
      "\tbegin=\"$2\" dur=\"$3\" repeatCount=\"$4\">",
      "\t$5",
      "</animateMotion>"
    ],
    "description": "The animateMotion element causes a referenced element to move along a motion path."
  },
  "animateTransform": {
    "prefix": "animateTransform",
    "body": [
      "<animateTransform attributeName=\"$1\"",
      "\tattributeType=\"XML\"",
      "\ttype=\"$2\"",
      "\tfrom=\"$3\"",
      "\tto=\"$4\"",
      "\tdur=\"$5\"",
      "\trepeatCount=\"$6\"/>$7"
    ],
    "description": "The animateTransform element animates a transformation attribute on a target element, thereby allowing animations to control translation, scaling, rotation and/or skewing."
  },
  "circle": {
    "prefix": "circle",
    "body": ["<circle cx=\"$1\" cy=\"$2\" r=\"$3\" style=\"$4\"/>$5"],
    "description": "The circle element is an SVG basic shape, used to create circles based on a center point and a radius."
  },
  "clipPath": {
    "prefix": "clipPath",
    "body": ["<clipPath id=\"$1\">", "\t$2", "</clipPath>"],
    "description": "The clipping path restricts the region to which paint can be applied."
  },
  "cursor": {
    "prefix": "cursor",
    "body": ["<cursor x=\"$1\" y=\"$2\" xlink:href=\"$3\"/>$4"],
    "description": "The cursor element can be used to define a platform-independent custom cursor. "
  },
  "defs": {
    "prefix": "defs",
    "body": ["<defs>", "\t$1", "</defs>"],
    "description": "<defs> element is used to embed definitions that can be reused inside an SVG image."
  },
  "desc": {
    "prefix": "desc",
    "body": ["<desc>", "\t$1", "</desc>"],
    "description": "<desc> element is used to embed descriptions with SVG for accessibility."
  },
  "ellipse": {
    "prefix": "ellipse",
    "body": [
      "<ellipse cx=\"$1\" cy=\"$2\" rx=\"$3\" ry=\"$4\" style=\"$5\"/>$6"
    ],
    "description": "The ellipse element is an SVG basic shape, used to create ellipses based on a center coordinate, and both their x and y radius."
  },
  "feBlend": {
    "prefix": "feBlend",
    "body": ["<feBlend  in=\"$1\" in2=\"$2\"/>$3"],
    "description": "The blend filter can blend input from multiple filters into one."
  },
  "feColorMatrix": {
    "prefix": "feColorMatrix",
    "body": [
      "<feColorMatrix in=\"$1\"",
      "\ttype=\"$2\"",
      "\tvalues=\"$3\"/>$4"
    ],
    "description": "This filter changes colors based on a transformation matrix. Every pixel's color value (represented by an [R,G,B,A] vector) is matrix multiplied to create a new color."
  },
  "feComponentTransfer": {
    "prefix": "feComponentTransfer",
    "body": [
      "<feComponentTransfer in=\"$1\">",
      "\t$2",
      "</feComponentTransfer>"
    ],
    "description": "The color of each pixel is modified by changing each channel (R, G, B, and A) to the result of what the children <feFuncR>, <feFuncB>, <feFuncG>, and <feFuncA> return."
  },
  "feComposite": {
    "prefix": "feComposite",
    "body": [
      "<feComposite in=\"$1\" in2=\"$2\"",
      "\toperator=\"$3\" k1=\"$4\" k2=\"$5\" k3=\"$6\" k4=\"$7\"/>$8"
    ],
    "description": "This filter primitive performs the combination of two input images pixel-wise in image space using one of the Porter-Duff compositing operations: over, in, atop, out, xor. "
  },
  "feDiffuseLighting": {
    "prefix": "feDiffuseLighting",
    "body": [
      "<feDiffuseLighting in=\"$1\" result=\"$2\" lighting-color=\"$3\">",
      "\t$4",
      "</feDiffuseLighting>"
    ],
    "description": "This filter primitive lights an image using the alpha channel as a bump map."
  },
  "feDistantLight": {
    "prefix": "feDistantLight",
    "body": ["<feDistantLight azimuth=\"$1\" elevation=\"$2\"/>$3"],
    "description": "This filter primitive define a distant light source that can be used within a lighting filter primitive : <feDiffuseLighting> or <feSpecularLighting>."
  },
  "feFlood": {
    "prefix": "feFlood",
    "body": ["<feFlood flood-color=\"$1\" flood-opacity=\"$2\"/>$3"],
    "description": "The filter fills the filter subregion with the color and opacity defined by flood-color and flood-opacity."
  },
  "feImage": {
    "prefix": "feImage",
    "body": ["<feImage xlink:href=\"$1\" preserveAspectRatio=\"$2\"/>$3"],
    "description": "The filter blurs the input image by the amount specified in stdDeviation, which defines the bell-curve."
  },
  "feGaussianBlur": {
    "prefix": "feGaussianBlur",
    "body": ["<feGaussianBlur in=\"$1\" stdDeviation=\"$2\"/>$3"],
    "description": "The filter blurs the input image by the amount specified in stdDeviation, which defines the bell-curve."
  },
  "feMerge": {
    "prefix": "feMerge",
    "body": ["<feMerge>", "\t$1", "</feMerge>"],
    "description": "The feMerge filter allows filter effects to be applied concurrently instead of sequentially. This is achieved by other filters storing their output via the result attribute and then accessing it in a <feMergeNode> child."
  },
  "feMergeNode": {
    "prefix": "feMergeNode",
    "body": ["<feMergeNode in=\"$1\"/>$2"],
    "description": "The feMergeNode takes the result of another filter to be processed by its parent <feMerge>."
  },
  "feMorphology": {
    "prefix": "feMorphology",
    "body": ["<feMorphology in=\"$1\" operator=\"$2\" radius=\"$3\"/>$4"],
    "description": "This filter is used to erode or dilate the input image. It's usefulness lies especially in fattening or thinning effects."
  },
  "feOffset": {
    "prefix": "feOffset",
    "body": ["<feOffset in=\"$1\" dx=\"$2\" dy=\"$3\"/>$4"],
    "description": "The input image as a whole is offset by the values specified in the dx and dy attributes. It's used in creating drop-shadows."
  },
  "fePointLight": {
    "prefix": "fePointLight",
    "body": ["<fePointLight x=\"$1\" y=\"$2\" z=\"$3\"/>$4"],
    "description": ""
  },
  "feSpecularLighting": {
    "prefix": "feSpecularLighting",
    "body": [
      "<feSpecularLighting in=\"$1\" surfaceScale=\"$2\" specularConstant=\"$3\" specularExponent=\"$4\" kernelUnitLength=\"$5\"/>$6"
    ],
    "description": "This filter primitive lights a source graphic using the alpha channel as a bump map."
  },
  "feSpotLight": {
    "prefix": "feSpotLight",
    "body": [
      "<feSpotLight x=\"$1\" y=\"$2\" z=\"$3\" limitingConeAngle=\"$4\"",
      "\tpointsAtX=\"$5\" pointsAtY=\"$6\" pointsAtZ=\"$7\"/>$8"
    ],
    "description": "The feSpotLight element is one of the ligth source elements used for SVG files."
  },
  "feTile": {
    "prefix": "feTile",
    "body": ["<feTile in=\"$1\" />$2"],
    "description": "An input image is tiled and the result used to fill a target. The effect is similar to the one of a <pattern>."
  },
  "feTurbulence": {
    "prefix": "feTurbulence",
    "body": [
      "<feTurbulence baseFrequency=\"$1\" numOctaves=\"$2\" seed=\"$3\" stitchTiles=\"$4\" type=\"$5\"/>$6"
    ],
    "description": "This filter primitive creates an image using the Perlin turbulence function. It allows the synthesis of artificial textures like clouds or marble."
  },
  "filter": {
    "prefix": "filter",
    "body": [
      "<filter id=\"$1\" x=\"$2\" y=\"$3\" width=\"$4\" height=\"$5\">",
      "\t$6",
      "</filter>"
    ],
    "description": "The filter element serves as container for atomic filter operations. It is never rendered directly. A filter is referenced by using the filter attribute on the target SVG element."
  },
  "foreignObject": {
    "prefix": "foreignObject",
    "body": [
      "<foreignObject width=\"$1\" height=\"$2\"",
      "\trequiredExtensions=\"http://www.w3.org/1999/xhtml\">",
      "\t<body xmlns=\"http://www.w3.org/1999/xhtml\">",
      "\t\t$3",
      "\t</body>",
      "</foreignObject>"
    ],
    "description": "The foreignObject element allows for inclusion of a foreign XML namespace which has its graphical content drawn by a different user agent. The included foreign graphical content is subject to SVG transformations and compositing."
  },
  "g": {
    "prefix": "g",
    "body": ["<g>", "\t$1", "</g>"],
    "description": "<g> element is used to group SVG shapes together"
  },
  "glyph": {
    "prefix": "glyph",
    "body": ["<glyph unicode=\"$1\" d=\"$2\">", "\t$3", "</glyph>"],
    "description": "A glyph defines a single glyph in an SVG font."
  },
  "image": {
    "prefix": "image",
    "body": [
      "<image xlink:href=\"$1\" x=\"$2\" y=\"$3\" height=\"$4\" width=\"$5\"/>$6"
    ],
    "description": "The SVG Image Element (<image>) allows a raster image to be included in an SVG document."
  },
  "line": {
    "prefix": "line",
    "body": [
      "<line x1=\"$1\" y1=\"$2\"",
      "\t  x2=\"$3\" y2=\"$4\"",
      "\t  stroke=\"$5\"",
      "\t  stroke-width=\"$6\"/>$7"
    ],
    "description": "The line element is an SVG basic shape, used to create a line connecting two points."
  },
  "linearGradient": {
    "prefix": "linearGradient",
    "body": [
      "<linearGradient id=\"$1\"",
      "\tx1=\"$2\" y1=\"$3\"",
      "\tx2=\"$4\" y2=\"$5\"",
      "\tspreadMethod=\"$6\">",
      "\t$7",
      "</linearGradient>"
    ],
    "description": "The linearGradient element lets authors define linear gradients to fill or stroke graphical elements."
  },
  "marker": {
    "prefix": "marker",
    "body": [
      "<marker id=\"$1\"",
      "\tviewBox=\"$2\"",
      "\trefX=\"$3\" refY=\"$4\"",
      "\tmarkerWidth=\"$5\"",
      "\tmarkerHeight=\"$6\"",
      "\torient=\"$7\">",
      "\t$8",
      "</marker>"
    ],
    "description": "The marker element defines the graphics that is to be used for drawing arrowheads or polymarkers on a given <path>, <line>, <polyline> or <polygon> element."
  },
  "mask": {
    "prefix": "mask",
    "body": [
      "<mask id=\"$1\" maskUnits=\"$2\"",
      "x=\"$3\" y=\"$4\" width=\"$5\" height=\"$6\">",
      "\t$7",
      "</mask>"
    ],
    "description": "In SVG, you can specify that any other graphics object or <g> element can be used as an alpha mask for compositing the current object into the background."
  },
  "missing-glyph": {
    "prefix": "missing-glyph",
    "body": ["<missing-glyph>", "\t$1", "</missing-glyph>"],
    "description": "The missing-glyph's content is rendered, if for a given character the font doesn't define an appropriate <glyph>."
  },
  "mpath": {
    "prefix": "mpath",
    "body": ["<mpath xlink:href=\"$1\"/>$2"],
    "description": "the mpath sub-element for the <animateMotion> element provides the ability to reference an external <path> element as the definition of a motion path."
  },
  "path": {
    "prefix": "path",
    "body": [
      "<path d=\"$1\"",
      "\t fill=\"$2\" stroke=\"$3\" stroke-width=\"$4\" />$5"
    ],
    "description": "The path element is the generic element to define a shape. All the basic shapes can be created with a path element."
  },
  "pattern": {
    "prefix": "pattern",
    "body": [
      "<pattern id=\"$1\" x=\"$2\" y=\"$3\" width=\"$4\" height=\"$5\"",
      "\tpatternUnits=\"$6\">",
      "\t$7",
      "</pattern>"
    ],
    "description": "The pattern element defines a graphics object which can be redrawn at repeated x and y-coordinate intervals (\"tiled\") to cover an area."
  },
  "polygon": {
    "prefix": "polygon",
    "body": ["<polygon points=\"$1\" style=\"$2\"/>$3"],
    "description": "The polygon element defines a closed shape consisting of a set of connected straight line segments."
  },
  "polyline": {
    "prefix": "polyline",
    "body": ["<polyline points=\"$1\" style=\"$2\"/>$3"],
    "description": "The polyline element is an SVG basic shape that creates straight lines connecting several points."
  },
  "radialGradient": {
    "prefix": "radialGradient",
    "body": [
      "<radialGradient id=\"$1\"",
      "\tfx=\"$2\" fy=\"$3\" r=\"$4\"",
      "\tspreadMethod=\"$5\">",
      "\t$6",
      "</radialGradient>"
    ],
    "description": "radialGradient lets authors define radial gradients to fill or stroke graphical elements."
  },
  "rect": {
    "prefix": "rect",
    "body": [
      "<rect x=\"$1\" y=\"$2\" width=\"$3\" height=\"$4\" style=\"$5\"/>$6"
    ],
    "description": "The rect element is an SVG basic shape, used to create rectangles based on the position of a corner and their width and height."
  },
  "script": {
    "prefix": "script",
    "body": ["<script type=\"text/javascript\">", "\t$1", "</script>"],
    "description": "A SVG script element is equivalent to the script element in HTML and thus is the place for scripts (e.g., ECMAScript)."
  },
  "set": {
    "prefix": "set",
    "body": ["<set to=\"$1\" />$2"],
    "description": "The set element provides a simple means of just setting the value of an attribute for a specified duration."
  },
  "stop": {
    "prefix": "stop",
    "body": ["<stop offset=\"$1\" stop-color=\"$2\" stop-opacity=\"$3\"/>$4"],
    "description": "The ramp of colors to use on a gradient is defined by the stop elements that are child elements to either the <linearGradient> element or the <radialGradient> element."
  },
  "style": {
    "prefix": "style",
    "body": ["<style>", "\t$1", "</style>"],
    "description": "The style element allows style sheets to be embedded directly within SVG content."
  },
  "svg": {
    "prefix": "svg",
    "body": [
      "<svg width=\"$1\" height=\"$2\"",
      "\t viewBox=\"$3\" version=\"1.1\"",
      "\t xmlns=\"http://www.w3.org/2000/svg\"",
      "\t xmlns:xlink=\"http://www.w3.org/1999/xlink\">",
      "\t$4",
      "</svg>"
    ],
    "description": "The svg element can be used to embed an SVG fragment inside the current document."
  },
  "switch": {
    "prefix": "switch",
    "body": ["<switch>", "\t$1", "</switch>"],
    "description": "The <switch> element enables you to show different shapes depending on what language the user of the SVG viewer is using."
  },
  "symbol": {
    "prefix": "symbol",
    "body": ["<symbol id=\"$1\" viewBox=\"$2\">", "\t$3", "</symbol>"],
    "description": "The symbol element is used to define graphical template objects which can be instantiated by a <use> element."
  },
  "text": {
    "prefix": "text",
    "body": ["<text x=\"$1\"  y=\"$2\" style=\"$3\">$4</text>"],
    "description": "The SVG text element defines a graphics element consisting of text."
  },
  "textPath": {
    "prefix": "textPath",
    "body": ["<textPath xlink:href=\"$1\">", "\t$2", "</textPath>"],
    "description": "The SVG <textpath> element is used to layout text along a path, for instance in a circle."
  },
  "title": {
    "prefix": "title",
    "body": ["<title>$1</title>"],
    "description": "When the current SVG document fragment is rendered as SVG on visual media, title element is not rendered as part of the graphics. However, some user agents may, for example, display the title element as a tooltip."
  },
  "tref": {
    "prefix": "tref",
    "body": ["<tref xlink:href=\"$1\"/>$2"],
    "description": "The textual content for a <text> can be either character data directly embedded within the <text> element or the character data content of a referenced element, where the referencing is specified with a tref element."
  },
  "tspan": {
    "prefix": "tspan",
    "body": ["<tspan>$1</tspan>"],
    "description": "Within a <text> element, text and font properties and the current text position can be adjusted with absolute or relative coordinate values by including a tspan element."
  },
  "use": {
    "prefix": "use",
    "body": ["<use xlink:href=\"$1\" x=\"$2\" y=\"$3\" />$4"],
    "description": "The use element takes nodes from within the SVG document, and duplicates them somewhere else."
  }
}
